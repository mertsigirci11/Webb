// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Randevu_Sistemi.Data;

namespace WebApplication3.Migrations
{
    [DbContext(typeof(RandevuDbContext))]
    [Migration("20211226164726_ilk")]
    partial class ilk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Randevu_Sistemi.Models.Admin", b =>
                {
                    b.Property<string>("AdminAd")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminAd");

                    b.ToTable("Adminler");
                });

            modelBuilder.Entity("Randevu_Sistemi.Models.Doktor", b =>
                {
                    b.Property<int>("DoktorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktiflik")
                        .HasColumnType("bit");

                    b.Property<string>("DoktorAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoktorSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoktorSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DoktorID");

                    b.ToTable("Doktorlar");
                });

            modelBuilder.Entity("Randevu_Sistemi.Models.Hasta", b =>
                {
                    b.Property<string>("HastaTCNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HastaAd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HastaSoyad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HastaTCNo");

                    b.ToTable("Hastalar");
                });

            modelBuilder.Entity("Randevu_Sistemi.Models.Randevu", b =>
                {
                    b.Property<int>("RandevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DoktorID")
                        .HasColumnType("int");

                    b.Property<string>("HastaTCNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RandevuSaati")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("RandevuID");

                    b.HasIndex("DoktorID");

                    b.HasIndex("HastaTCNo");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("Randevu_Sistemi.Models.Randevu", b =>
                {
                    b.HasOne("Randevu_Sistemi.Models.Doktor", "Doktor")
                        .WithMany()
                        .HasForeignKey("DoktorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Randevu_Sistemi.Models.Hasta", "Hasta")
                        .WithMany()
                        .HasForeignKey("HastaTCNo");

                    b.Navigation("Doktor");

                    b.Navigation("Hasta");
                });
#pragma warning restore 612, 618
        }
    }
}
